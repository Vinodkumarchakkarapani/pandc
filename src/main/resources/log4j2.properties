status = warn
name = properties_configuration

# Give directory path where log files should get stored
property.basePath = ./logs/

# ConsoleAppender will print logs on console
appender.console.type = Console
appender.console.name = consoleLogger
appender.console.target = SYSTEM_OUT
appender.console.layout.type = PatternLayout
appender.console.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c{1}]:%03L - %m%n

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling.type = RollingFile
appender.rolling.name = fileLogger
appender.rolling.fileName = ${basePath}PandC.tests.log
appender.rolling.filePattern = ${basePath}PandC.tests_%d{yyyyMMdd}.log.gz
appender.rolling.layout.type = PatternLayout
appender.rolling.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} %-5p [%c{1}]:%03L - %m%n
appender.rolling.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling.policies.time.interval = 1
appender.rolling.policies.time.modulate = true
appender.rolling.strategy.type = DefaultRolloverStrategy
appender.rolling.strategy.delete.type = Delete
appender.rolling.strategy.delete.basePath = ${basePath}
appender.rolling.strategy.delete.maxDepth = 1
appender.rolling.strategy.delete.ifLastModified.type = IfLastModified
appender.rolling.strategy.delete.ifLastModified.age = 30d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.rolling.name = com.PandC.tests
logger.rolling.level = debug
logger.rolling.additivity = false
logger.rolling.appenderRef.rolling.ref = fileLogger
logger.rolling.appenderRef.console.ref = consoleLogger

# Performance log
# Configure root logger for logging error logs in classes which are in package other than above specified package
rootLogger.level = info
rootLogger.additivity = false
rootLogger.appenderRef.rolling.ref = fileLogger
rootLogger.appenderRef.console.ref = consoleLogger

# RollingFileAppender will print logs in file which can be rotated based on time or size
appender.rolling1.type = RollingFile
appender.rolling1.name = fileLogger1
appender.rolling1.fileName = ${basePath}PandC.Perf_tests.log
appender.rolling1.filePattern = ${basePath}PandC.Perf_tests_%d{yyyyMMdd}.log.gz
appender.rolling1.layout.type = PatternLayout
appender.rolling1.layout.pattern = %d{yyyy-MM-dd HH:mm:ss.SSS} - %m%n
appender.rolling1.policies.type = Policies

# Rotate log file each day and keep 30 days worth
appender.rolling1.policies.time.type = TimeBasedTriggeringPolicy
appender.rolling1.policies.time.interval = 1
appender.rolling1.policies.time.modulate = true
appender.rolling1.strategy.type = DefaultRolloverStrategy
appender.rolling1.strategy.delete.type = Delete
appender.rolling1.strategy.delete.basePath = ${basePath}
appender.rolling1.strategy.delete.maxDepth = 1
appender.rolling1.strategy.delete.ifLastModified.type = IfLastModified
appender.rolling1.strategy.delete.ifLastModified.age = 30d

# Mention package name here in place of example. Classes in this package or subpackages will use ConsoleAppender and RollingFileAppender for logging
logger.rolling1.name = com.PandC._perftests
logger.rolling1.level = debug
logger.rolling1.additivity = false
logger.rolling1.appenderRef.rolling1.ref = fileLogger1
logger.rolling1.appenderRef.console.ref = consoleLogger


## for Performance log
#logger.performance=INFO, stdout, performance
#logger.appender.performance=org.apache.log4j.RollingFileAppender
#logger.appender.performance.File=./logs/PandC-performance.log
#logger.appender.performance.MaxFileSize=5MB
#logger.appender.performance.MaxBackupIndex=10
#logger.appender.performance.layout=org.apache.log4j.PatternLayout
#logger.appender.performance.layout.ConversionPattern=%d{yyyy-MM-dd HH:mm:ss} %-5p %c{1}:%L - %m%n